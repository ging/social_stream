//= require social_stream.wall

SocialStream.Linkser.Wall = (function(SS, $) {
  var regexp = /^(http|ftp|https):\/\/[\w-]+(\.[\w-]+)+([\w.,@?^=%&;:\/~+#-]*[\w@?^=%&;\/~+#-])?$/

  var urlDetect = function() {
    this.currentValue = $("#post_text").val();

    if(this.lastValue == null)
      this.lastValue = "";

    if (regexp.test($("#post_text").val())) {
      $("#link_url").val($("#post_text").val());
      $("#link_loaded").val(false);
      $("#new_post").attr("action", "/links");
      SS.Wall.changeRelationSelect('link');

      if(this.currentValue != this.lastValue) {
        $("#link_preview").html($('<img>').attr('src', '<%= asset_path('loading.gif') %>').addClass('loading'));

        this.lastValue = this.currentValue;
        var url = this.currentValue;
        var urlDetect = this;

        $.ajax({
          type : "GET",
          url : "/linkser_parse?url=" + url,
          dataType: 'html',
          success : function(html) {
            if($("#post_text").val() == url) {//Only show if input value is still the same
              $("#link_preview").html(html);
              $("#link_loaded").val(true);
            }
          },
          error : function(xhr, ajaxOptions, thrownError) {
            if($("#post_text").val() == url) {//Only show if input value is still the same
              $("#link_preview").html($('<div>').addClass('loading').html(I18n.t('link.errors.loading') + " " + url));
            }
          }
        });
      }

      $("#link_preview").show();
    } else {
      // reset should return to /documents when there is a file
      // resetWallInput({ postText: false });
    }
  }

  var resetWallInput = function(options) {
    $("#new_post").attr("action", "/posts");
    $("#link_preview").hide().html('');
    $("#link_url").val("");
    SS.Wall.changeRelationSelect('post');

    if (options.postText) {
      $('#post_text').val('');
    }
  };

  var init = function(){
    $.preloadImages("<%= asset_path('loading.gif') %>");

    if ($("#new_post").length) {
      $("#post_text").change(urlDetect).keyup(urlDetect);

      $("#post_text").after(
        $('<input>', {
          type: 'hidden',
          name: 'link[owner_id]'
        }).val($("#post_owner_id").val()),
        $('<input>', {
          type: 'hidden',
          name: 'link[url]',
          id:   'link_url'
        }),
        $('<input>', {
          type: 'hidden',
          name: 'link[loaded]',
          id:   'link_loaded'
        }).val(false),
        $('<div>', {
          id: 'link_preview'
        }).css('display', 'none')
      );
    }
  }

  var openCallback = function(id,url,w,h){
      var height='353';

      if(w>0 && h>0) {
          height=470*h/w;
      }

      $("#" + id).html($('<iframe>').attr('src',url).attr('width','470').attr('height',height));
  }

  var create = function() {
    resetWallInput({ postText: true });
  };

  SocialStream.Wall.addShowCallback(init);

  return {
    create: create,
    openCallback: openCallback
  }

})(SocialStream, jQuery);
